--------------------------------------------------------------------------------
type Coin = Int


--------------------------------------------------------------------------------
coins :: [Coin]
coins = [200, 100, 50, 20, 10, 5, 2, 1]


--------------------------------------------------------------------------------
make :: Int -> [Coin] -> Int
make 0 _        = 1
make _ []       = 0
make n (c : cs) = sum
    [ make (n - m) cs
    | m <- takeWhile (<= n) [c * i | i <- [0 ..]]
    ]


--------------------------------------------------------------------------------
main :: IO ()
main = print $ make 200 coins
